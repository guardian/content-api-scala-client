package com.gu.openplatform.contentapi.parser
import org.scalatest.matchers.ShouldMatchers
import org.scalatest.FlatSpec
import JsonFileLoader._
import com.gu.openplatform.contentapi.model.Content

class CollectionJsonParserTest extends FlatSpec with ShouldMatchers {
  // generated by:
  // http://content.guardianapis.com/tags.json
  //   ?page-size=2&format=json
  lazy val collectionResponse = JsonParser.parseCollection(loadFile("collection-sport.json"))

  "collection endpoint parser" should "parse basic reponse header" in {
    collectionResponse.status should be ("ok")
    collectionResponse.userTier should be ("deprecated")
    collectionResponse.total should be (1)
    collectionResponse.pages should be (1)
    collectionResponse.startIndex should be (1)
    collectionResponse.pageSize should be (10)
    collectionResponse.currentPage should be (1)
  }

  it should "parse the collection" in {
    collectionResponse.collection.id should be ("uk-sport-regular-stories")
    collectionResponse.collection.title should be(Some("Top stories"))
  }

  it should "parse the collection's groups" in {
    collectionResponse.collection.groups.size should be(2)
    collectionResponse.collection.groups.head should be("Foo")
  }

  it should "parse the collection's backfill" in {
    collectionResponse.collection.backfill.size should be(10)
    collectionResponse.collection.backfill should be("search?q=cats")
  }

  // TODO: Add curated content test when available
  it should "parse the collection's curated content" is pending

}
